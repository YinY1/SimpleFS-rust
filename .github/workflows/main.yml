name: Build and Release Rust Projects

on: 
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: [shell, simdisk]

    steps:
    - uses: actions/checkout@v3

    - name: Build Linux Target ${{ matrix.project }}
      run: |
        cd ${{ matrix.project }}
        cargo build --release --target x86_64-unknown-linux-gnu

    - name: Upload Linux ${{ matrix.project }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.project }}
        path: ${{ matrix.project }}/target/x86_64-unknown-linux-gnu/release/${{ matrix.project }}

  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        project: [shell, simdisk]

    steps:
    - uses: actions/checkout@v3

    - name: Build Windows Target ${{ matrix.project }}
      run: |
        cd ${{ matrix.project }}
        cargo build --release --target x86_64-pc-windows-gnu

    - name: Upload Windows ${{ matrix.project }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.project }}.exe
        path: ${{ matrix.project }}/target/x86_64-pc-windows-gnu/release/${{ matrix.project }}.exe

  build-mac:
    runs-on: macos-latest

    strategy:
      matrix:
        project: [shell, simdisk]

    steps:
    - uses: actions/checkout@v3

    - name: Build MacOS Target ${{ matrix.project }}
      run: |
        cd ${{ matrix.project }}
        cargo build --release --target x86_64-apple-darwin
        mv target/x86_64-apple-darwin/release/${{ matrix.project }} target/x86_64-apple-darwin/release/${{ matrix.project }}.app

    - name: Upload MacOS ${{ matrix.project }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.project }}.app
        path: ${{ matrix.project }}/target/x86_64-apple-darwin/release/${{ matrix.project }}.app

  build-mac-arm:
    runs-on: macos-latest

    strategy:
      matrix:
        project: [shell, simdisk]

    steps:
    - uses: actions/checkout@v3

    - name: Build ARM MacOS Target ${{ matrix.project }}
      run: |
        rustup target add aarch64-apple-darwin
        cd ${{ matrix.project }}
        cargo build --release --target aarch64-apple-darwin
        mv target/aarch64-apple-darwin/release/${{ matrix.project }} target/aarch64-apple-darwin/release/${{ matrix.project }}_arm64.app

    - name: Upload Arm MacOS ${{ matrix.project }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.project }}_arm64.app
        path: ${{ matrix.project }}/target/aarch64-apple-darwin/release/${{ matrix.project }}_arm64.app

        
  release:
    needs: [build-linux, build-windows, build-mac, build-mac-arm]
    runs-on: ubuntu-latest

    env: 
      VERSION: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v3
        with:
          path: bins

      - name: Add permissions to files
        run: |
          find bins -type f -exec chmod +x {} \;

      - name : Upx archive
        run: |
          sudo apt install -y upx
          find bins -type f -exec upx "{}" --best \;

      - name: Archive Linux Binaries
        run: |
          zip -j $FILENAME bins/shell/shell bins/simdisk/simdisk
        env:
          FILENAME: SimpleFS_x86_64-linux_${{env.VERSION}}.zip

      - name: Archive Windows Binaries
        run: |
          zip -j $FILENAME bins/shell.exe/shell.exe bins/simdisk.exe/simdisk.exe
        env:
          FILENAME: SimpleFS_x86_64-windows_${{env.VERSION}}.zip

      - name: Archive MacOS Binaries
        run: |
          zip -j $FILENAME bins/shell.app/shell.app bins/simdisk.app/simdisk.app
        env:
          FILENAME: SimpleFS_x86_64--apple_${{env.VERSION}}.zip

      - name: Archive ARM MacOS Binaries
        run: |
          zip -j $FILENAME bins/shell_arm64.app/shell_arm64.app bins/simdisk_arm64.app/simdisk_arm64.app
        env:
          FILENAME: SimpleFS_aarch64-apple_${{env.VERSION}}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.zip